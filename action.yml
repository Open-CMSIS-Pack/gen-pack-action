name: 'gen-pack'
description: 'Generate Open-CMSIS-Pack documentation and pack'
inputs:
  doxygen-version:
    description: 'Version of Doxygen'
    required: false
    default: 1.9.2
  packchk-version:
    description: 'Version of PackChk'
    required: false
    default: 1.3.95
  gen-doc-script:
    description: 'Path to gen-doc script'
    required: false
  check-links-script:
    description: 'Path to check-links script'
    required: false
  doc-path:
    description: 'Path to documentation'
    required: false
  gen-pack-script:
    description: 'Path to gen-pack script'
    required: false
  gen-pack-output:
    description: 'Path to gen-pack output'
    required: false
  gh-pages-branch:
    description: 'Branch used for gh-pages deployment'
    required: false
    default: gh-pages
runs:
  using: "composite"
  steps:
    - name: Update release description
      if: ${{ github.event_name == 'release' }}
      env:
        GH_TOKEN: ${{ github.token }}
      shell: bash
      run: |
        TYPE="$(git for-each-ref --format "%(objecttype)" ${GITHUB_REF})"
        CURRENT="$(gh release view ${GITHUB_REF_NAME} --json body -t "{{.body}}")"
        if [[ -z "${CURRENT}" && "${TYPE}" == "tag" ]]; then
          DESC=$(git tag -l -n99 --format "%(contents)" ${GITHUB_REF_NAME})
          gh release edit -n "${DESC}"
        fi

    - name: Add release tag annotation
      if: ${{ github.event_name == 'release' }}
      env:
        GH_TOKEN: ${{ github.token }}
      shell: bash
      run: |
        TYPE="$(git for-each-ref --format "%(objecttype)" ${GITHUB_REF})"
        DESC="$(gh release view ${GITHUB_REF_NAME} --json body -t "{{.body}}")"
        if [[ -n "${DESC}" && "${TYPE}" == "commit" ]]; then
          export GIT_COMMITTER_NAME="$(git tag -l --format "%(committername)" ${GITHUB_REF_NAME})"
          export GIT_COMMITTER_EMAIL="$(git tag -l --format "%(committeremail)" ${GITHUB_REF_NAME})"
          export GIT_COMMITTER_DATE="$(gh release view ${GITHUB_REF_NAME} --json publishedAt -t "{{.publishedAt}}")"
          git tag ${GITHUB_REF_NAME} ${GITHUB_REF_NAME}^{} -f -a -m "${DESC}"
          git push --force origin ${GITHUB_REF_NAME}:${GITHUB_REF_NAME}
        fi

    - name: Install packages
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install --no-install-recommends -y libclang1-9 libclang-cpp1-9 p7zip libxml2-utils
        sudo pip install LinkChecker

    - name: Install doxygen ${{ inputs.doxygen-version }}
      shell: bash
      run: |
        wget https://doxygen.nl/files/doxygen-${{ inputs.doxygen-version }}.linux.bin.tar.gz
        sudo tar -C /opt -xf doxygen-${{ inputs.doxygen-version }}.linux.bin.tar.gz
        sudo ln -s /opt/doxygen-${{ inputs.doxygen-version }}/bin/doxygen /usr/local/bin/
        which doxygen
        doxygen --version

    - name: Install PackChk ${{ inputs.packchk-version }}
      shell: bash
      run: |
        wget https://github.com/Open-CMSIS-Pack/devtools/releases/download/tools%2Fpackchk%2F${{ inputs.packchk-version }}/packchk-${{ inputs.packchk-version }}-linux64.zip
        unzip packchk-${{ inputs.packchk-version }}-linux64.zip
        sudo mv packchk /usr/local/bin
        which packchk
        packchk --version

    - name: Generate doxygen
      if: ${{ inputs.gen-doc-script }}
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo "::add-matcher::${{ github.action_path }}/doxygen.json"
        ${{ inputs.gen-doc-script }}
        echo "::remove-matcher owner=doxygen::"

    - name: Run linkchecker
      if: ${{ inputs.check-links-script }}
      shell: bash
      run: |
        echo "::add-matcher::${{ github.action_path }}/linkchecker.json"
        ${{ inputs.check-links-script }}
        echo "::remove-matcher owner=linkchecker::"

    - name: Archive documentation
      if: ${{ inputs.doc-path && github.event_name == 'pull_request' }}
      uses: actions/upload-artifact@v2
      with:
        name: documentation
        path: ${{ inputs.doc-path }}
        retention-days: 1
        if-no-files-found: error

    - name: Archive documentation
      if: ${{ inputs.doc-path && (github.event_name == 'release' || github.event_name == 'push' || github.event_name == 'workflow_dispatch') }}
      shell: bash
      run: |
        tar -cvjf /tmp/doc.tbz2 -C ${{ inputs.doc-path }} .

    - name: Generate pack
      if: ${{ inputs.gen-pack-script }}
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        mkdir -p ~/.arm/Packs/.Web
        wget -O ~/.arm/Packs/.Web/ARM.CMSIS.pdsc https://www.keil.com/pack/ARM.CMSIS.pdsc
        echo "::add-matcher::${{ github.action_path }}/packchk.json"
        ${{ inputs.gen-pack-script }}
        echo "::remove-matcher owner=packchk::"

    - name: Archive pack
      if: ${{ inputs.gen-pack-output && github.event_name != 'release' }}
      uses: actions/upload-artifact@v2
      with:
        path: ${{ inputs.gen-pack-output }}/*.pack
        retention-days: 1
        if-no-files-found: error

    - name: Attach pack to release assets
      if: ${{ inputs.gen-pack-output && github.event_name == 'release' }}
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ github.token }}
        file_glob: true
        file: ${{ inputs.gen-pack-output }}/*.pack
        tag: ${{ github.ref }}
        overwrite: true

    - uses: actions/checkout@v3
      if: ${{ inputs.gh-pages-branch && (github.event_name == 'release' || github.event_name == 'push' || github.event_name == 'workflow_dispatch') }}
      with:
        ref: ${{ inputs.gh-pages-branch }}

    - name: Publish documentation
      if: ${{ inputs.gh-pages-branch && (github.event_name == 'release' || github.event_name == 'push' || github.event_name == 'workflow_dispatch') }}
      shell: bash
      run: |
        rm -rf ${GITHUB_REF_NAME}
        mkdir -p ${GITHUB_REF_NAME}
        tar -xvjf /tmp/doc.tbz2 -C ${GITHUB_REF_NAME}
        if ${{ github.event_name == 'release' }}; then
          rm -f latest
          ln -s ${GITHUB_REF_NAME} latest
          MSG="release"
        else
          MSG="branch"
        fi
        test -x update_versions.sh && ./update_versions.sh
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git commit -m "Update documentation for ${MSG} ${GITHUB_REF_NAME}"
        git push

    - uses: actions/checkout@v3
      if: ${{ inputs.gh-pages-branch && (github.event_name == 'release' || github.event_name == 'push' || github.event_name == 'workflow_dispatch') }}
      with:
        ref: ${{ github.ref }}
